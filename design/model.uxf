<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>50</y>
      <w>320</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Student
--
id:int,unique
stuID:string,unique
name:string
age:int
gender:bool
grade:string
major:string
balance:int
--
getStudent(id)
addStudent(id, stuID, name, age, gender, grade, major)
updateStudentInfo(id, stuID, name, age, gender, grade, major)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>420</y>
      <w>150</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Transaction
--
transfer(fromID, toID, value)
topUp(ID, value)
withdraw(ID, value)


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>750</x>
      <y>130</y>
      <w>180</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Orgnization
--
id:int,unique
name:string,unique
admin:id,FOREIGN KEY(Student)
--
getOrgnization(name)
addOrgnization(name, admin)
updateOrgzation(name, admin)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>750</x>
      <y>0</y>
      <w>190</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>StuOrg
--
StuID:int,FOREIGN KEY(Student)
OrgID:int,FOREIGN KEY(Orgnizaztion)
--
addMember(StuID, OrgID)
removeMember(StuID, OrgID)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>280</y>
      <w>170</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>StuTask
--
StuID:int,FOREIGN KEY(Student)
TaskID:int,FOREIGN KEY(Task)
isFinish:bool
--
joinTask(stdId,  TaskID)
setFinished(StuID, TaskID)
removeParticipator(StuID, TaskID)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>590</x>
      <y>280</y>
      <w>340</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>Task
--
id:int,unique
name:string
deployer:id, unique
taskType:bool
content:string
detail:string
acceptLimit:int
currentAccNum:int
reward: int
deadline:date
--
addTask(name, deployer, taskType, content, detail, acceptLimit, reward)
getDetail(id)
getTaskList(deployer)
confirmFinish(id)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1010</x>
      <y>220</y>
      <w>210</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>_object: Class_
--
id: Long="36548"
[waiting for message]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>40</y>
      <w>300</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>User
--
id:int,unique
username:string,unique
email:string,unique
phone:string,unique
password:string
avatar:string
--
getUser(name)
addUser(username, email, phone,nickname, password)
updateUser(username,email,phone,nickname,password,avatar)</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
